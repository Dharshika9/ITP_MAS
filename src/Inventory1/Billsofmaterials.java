/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory1;
//import DbConn.dbconnect;
//import static DbConn.dbconnect.connect;


//import static DbConn.dbconnect.connect;
import DbConn.dbconnect;
import static DbConn.dbconnect.connect;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Dharshika
 */
public class Billsofmaterials extends javax.swing.JFrame {
 Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    ResultSet rs = null;
    ResultSet rs1 = null;

    /**
     * Creates new form Billsofmaterials
     */
    public Billsofmaterials() {
        con= dbconnect.connect();
        Connection con = null;
    PreparedStatement pst = null;
    PreparedStatement pst1 = null;
    ResultSet rs = null;
    ResultSet rs1 = null;
        initComponents();
         fillcombo ();
         fillfabcombo ();
        showjTable();
    }
      private void fillcombo ()
    
            
    {
        try {
            
            
            String sql ="Select * from procategory";
            pst=con.prepareStatement(sql);
            rs =pst.executeQuery();
            while(rs.next())
            
            {
                
                
                String cat = rs.getNString("procategory");
                cmb_productcategory.addItem(cat);
            
            
            }
            
        } catch (Exception e) {
        }
        
        
        
    }
         void loadSubCat()
    {
        try {
             //if(evt.getStateChange() == ItemEvent.SELECTED)
               // {
                 //   if(this.cmb_category.getSelectedIndex()>0)
           //{
            cmb_prosubcategory.removeAllItems();
            String sql ="Select * from prosubcategory where procategory ='"+cmb_productcategory.getSelectedItem().toString()+"' ";
            pst1=con.prepareStatement(sql);
            rs1 =pst1.executeQuery();
            while(rs1.next())
            
            {
                
                
                String subcat = rs1.getNString("prosubcategory");
                cmb_prosubcategory.addItem(subcat);
                
            
            } // }  
                //}
            
        } catch (Exception e) {
        }
    }
   private void fillfabcombo ()
    
            
    {
        try {
            
            
            String sql ="Select * from rawmaterials where name LIKE '%Fabric%'";
            pst=con.prepareStatement(sql);
            rs =pst.executeQuery();
            while(rs.next())
            
            {
                
                
                String cat = rs.getNString("name");
                cmb_fabname.addItem(cat);
            
            
            }
            
        } catch (Exception e) {
        }
        
        
        
    } /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_size = new javax.swing.JTextField();
        txt_color = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txt_fabcolor = new javax.swing.JTextField();
        txt_unitproduct = new javax.swing.JTextField();
        cmb_productcategory = new javax.swing.JComboBox<>();
        cmb_prosubcategory = new javax.swing.JComboBox<>();
        cmb_fabname = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        lbl_billno = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbl_fabcode = new javax.swing.JLabel();
        lbl_procode = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_bill = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(230, 120));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(1130, 610));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bill of Materials", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product code");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Product Category");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Subcategory");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Size");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Color");

        txt_size.setBackground(new java.awt.Color(153, 153, 153));

        txt_color.setBackground(new java.awt.Color(153, 153, 153));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fabric Code");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fabric Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Fabric Color");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Units/Product");

        txt_fabcolor.setBackground(new java.awt.Color(153, 153, 153));

        txt_unitproduct.setBackground(new java.awt.Color(153, 153, 153));

        cmb_productcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_productcategoryActionPerformed(evt);
            }
        });

        cmb_prosubcategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_prosubcategoryItemStateChanged(evt);
            }
        });

        cmb_fabname.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_fabnameItemStateChanged(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("DELETE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("UPDATE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        lbl_billno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbl_billno.setForeground(new java.awt.Color(255, 255, 255));
        lbl_billno.setText("Bill No");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbl_fabcode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_fabcode.setForeground(new java.awt.Color(255, 255, 255));
        lbl_fabcode.setText("No");

        lbl_procode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbl_procode.setForeground(new java.awt.Color(255, 255, 255));
        lbl_procode.setText("No");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(lbl_billno))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_size)
                                .addComponent(txt_color)
                                .addComponent(cmb_productcategory, 0, 204, Short.MAX_VALUE)
                                .addComponent(cmb_prosubcategory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_procode)))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(jLabel11)))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_unitproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_fabcolor)
                                .addComponent(cmb_fabname, 0, 204, Short.MAX_VALUE))
                            .addComponent(lbl_fabcode)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(423, 423, 423)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(261, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(lbl_billno)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel9)
                            .addComponent(lbl_fabcode)
                            .addComponent(lbl_procode))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(cmb_productcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(cmb_prosubcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(cmb_fabname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txt_fabcolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txt_unitproduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(24, 24, 24))
        );

        jTable_bill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill No", "Product Code", "Product Category", "Subcategory", "Size", "Product Color", "Fabric Code", "Fabric Name", "Fabric Color", "Units/Product"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_billMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_bill);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 972, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(238, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1138, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        
        
      
        
        String query="INSERT INTO `billofmaterials`(`procode`, `procategory`, `prosubcategory`, `size`,`color`,`fabcode`,`fabname`,`fabcolor`,`unitproduct`) " + "VALUES ( '"+lbl_procode.getText()+"' ,'"+cmb_productcategory.getSelectedItem()+"', '"+cmb_prosubcategory.getSelectedItem()+"','"+txt_size.getText()+"','"+txt_color.getText()+"','"+lbl_fabcode.getText()+"','"+cmb_fabname.getSelectedItem()+"','"+txt_fabcolor.getText()+"','"+txt_unitproduct.getText()+"')";
        executeSqlQuery(query, "Insert");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String query="DELETE FROM `billofmaterials` WHERE `billno`='"+lbl_billno.getText()+"'";
        executeSqlQuery(query, "Delete");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         String query="UPDATE `billofmaterials` SET `procategory`='"+cmb_productcategory.getSelectedItem()+"',`prosubcategory`='"+cmb_prosubcategory.getSelectedItem()+"',`fabname`='"+txt_unitproduct.getText()+"',`unitproduct`='"+txt_unitproduct.getText()+"'WHERE `billno`='"+lbl_billno.getText()+"'";
        executeSqlQuery(query, "Update");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmb_productcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_productcategoryActionPerformed
       loadSubCat();
    }//GEN-LAST:event_cmb_productcategoryActionPerformed

    private void jTable_billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_billMouseClicked
         int i=jTable_bill.getSelectedRow();
        TableModel model=jTable_bill.getModel();
        
       lbl_billno.setText(model.getValueAt(i, 0).toString());
        lbl_procode.setText(model.getValueAt(i, 1).toString());
        cmb_productcategory.setSelectedItem(model.getValueAt(i, 2).toString());
        cmb_prosubcategory.setSelectedItem(model.getValueAt(i, 3).toString());
        txt_size.setText(model.getValueAt(i, 4).toString());
        txt_color.setText(model.getValueAt(i, 5).toString());
        lbl_fabcode.setText(model.getValueAt(i, 6).toString());
        txt_fabcolor.setText(model.getValueAt(i, 8).toString());
        cmb_fabname.setSelectedItem(model.getValueAt(i, 7).toString());
       
        txt_unitproduct.setText(model.getValueAt(i, 9).toString());
    }//GEN-LAST:event_jTable_billMouseClicked

    private void cmb_prosubcategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_prosubcategoryItemStateChanged
         if(evt.getStateChange() ==java.awt.event.ItemEvent.SELECTED) {
             String procat = (String) cmb_productcategory.getSelectedItem();
             String prosub = (String) cmb_prosubcategory.getSelectedItem();
             
             
                    try{

                            String sql = "SELECT * FROM products WHERE procategory='"+procat+"' AND prosubcategory ='"+prosub+"' ";
                            Connection connection = connect();	
                            Statement st = connection.createStatement();
                            ResultSet rs = st.executeQuery(sql);
                            String size = "";
                            String color="";
                            String code="";
                            
                            
                                            

                            while(rs.next()){

                                               size= rs.getString("size");
                                               color = rs.getString("color");
                                               code=rs.getString("procode");
                                               
                                               
                                            
                                            }
                    txt_size.setText(size);
                    txt_color.setText(color);
                    lbl_procode.setText(code);
                    
                    
                   
                 
                   
                   }catch(Exception ex){
                                        }
                   
             
             
             
             
                    
         }
                                                     

    }//GEN-LAST:event_cmb_prosubcategoryItemStateChanged

    private void cmb_fabnameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_fabnameItemStateChanged
         if(evt.getStateChange() ==java.awt.event.ItemEvent.SELECTED) 
         
         {
             String fabname = (String) cmb_fabname.getSelectedItem();
            
             
             
                    try{

                            String sql = "SELECT * FROM rawmaterials WHERE name='"+fabname+"'";
                            Connection connection = connect();	
                            Statement st = connection.createStatement();
                            ResultSet rs = st.executeQuery(sql);
                            String fabcolor= "";
                            String fabcode="";
                            
                            
                                            

                            while(rs.next()){

                                              
                                               fabcolor = rs.getString("color");
                                                 fabcode = rs.getString("code");
                                               
                                               
                                            
                  
                    txt_fabcolor.setText(fabcolor);
                    lbl_fabcode.setText(fabcode);
                   
                    
                            }
                 
                   
                   }catch(Exception ex){
                                        }
                   
             
             
             
             
                    
                    
                    }
         
    }//GEN-LAST:event_cmb_fabnameItemStateChanged
   public ArrayList<BillofmaterialsModel> getbillList()
    {
        ArrayList<BillofmaterialsModel> billlist=new ArrayList<>();
        Connection connection = connect();
        String query="Select * from billofmaterials";
        
        Statement st;
        ResultSet rs;
        
        try {
            st=connection.createStatement();
            rs=st.executeQuery(query);
           BillofmaterialsModel billmodel;
            
            while(rs.next())
            {
                
                
                billmodel=new  BillofmaterialsModel(rs.getInt("billno"),rs.getString("procode"), rs.getString("procategory"), rs.getString("prosubcategory"), rs.getString("size"), rs.getString("color"), rs.getInt("fabcode"),rs.getString("fabname"),rs.getString("fabcolor"), rs.getDouble("unitproduct"));
                billlist.add(billmodel);
            }
                    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return billlist;
    }
      public void showjTable()
    {
        ArrayList<BillofmaterialsModel> listdata=getbillList();
        DefaultTableModel model =(DefaultTableModel)jTable_bill.getModel();
        
        Object [] row=new Object[10];
        for(int i = 0;i<listdata.size();i++)
        {
            
            row[0]=listdata.get(i).getBillno();
            row[1]=listdata.get(i).getProcode();
            row[2]=listdata.get(i).getProcategory();
            row[3]=listdata.get(i).getProsubcategory();
            row[4]=listdata.get(i).getSize();
            row[5]=listdata.get(i).getColor();
            row[6]=listdata.get(i).getFabcode();
            row[7]=listdata.get(i).getFabname();
           row[8]=listdata.get(i).getFabcolor();
           row[9]=listdata.get(i).getUnitprodct();
          
          
            
            model.addRow(row);
        }
    
    }
      
          public void ClearField()
    {
       
        
        lbl_billno.setText(null);
        lbl_procode.setText(null);
        cmb_productcategory.setSelectedItem(null);
        cmb_prosubcategory.setSelectedItem(null);
        txt_size.setText(null);
        txt_color.setText(null);
        lbl_fabcode.setText(null);
        cmb_fabname.setSelectedItem(null);
        txt_fabcolor.setText(null);
        txt_unitproduct.setText(null);
          
        
    }
       public void executeSqlQuery(String query,String message)
     {
         Connection conn= connect();
         Statement st;
         try {
              st=con.createStatement();
              if((st.executeUpdate(query))==1)
              {
                  // data get refresh after query runs 
                  DefaultTableModel model = (DefaultTableModel)jTable_bill.getModel();
                  model.setRowCount(0);
                  showjTable();
                  
                  
                  // message box
                  JOptionPane.showMessageDialog(null, "Data "+message+" Successfully");
                  ClearField();
              }else{
                  JOptionPane.showMessageDialog(null, "Data "+message+" Failed");
              }
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, e);
         }
     
     }
     
     
     
     
      
      /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Billsofmaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Billsofmaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Billsofmaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Billsofmaterials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Billsofmaterials().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_fabname;
    private javax.swing.JComboBox<String> cmb_productcategory;
    private javax.swing.JComboBox<String> cmb_prosubcategory;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_bill;
    private javax.swing.JLabel lbl_billno;
    private javax.swing.JLabel lbl_fabcode;
    private javax.swing.JLabel lbl_procode;
    private javax.swing.JTextField txt_color;
    private javax.swing.JTextField txt_fabcolor;
    private javax.swing.JTextField txt_size;
    private javax.swing.JTextField txt_unitproduct;
    // End of variables declaration//GEN-END:variables
}
